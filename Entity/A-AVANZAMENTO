G1: scheletro personaggio, giocatore, ruolo, attivo, ko, panchina
G2:  BESTEMMIE, MODIFICA DI SSD E UML--- ULTIMARE L'ATTACCO DEL PERSONAGGIO
G3: AUTOLOADER?, CLASSE TIPO, MODIFICA E IMPLEMENTAZIONE PARZIALE CLASSE MOSSA, VEDERE SE NEL MODIFICATORE VA INSERITO STAB RNG,
    FARE REFACTORING METODO CALCOLAATTACCO CLASSE TURNO, COMPLETARE CALCOLOMODIFICATORE IN CALCOLAATTACCO
G4: FATTORIZZATO E COMPLETATO METODO CALCOLAATTACCO, AGGIUNTI METODI CLACOLAMODIFICATORE E ISSTAB, MODIFICATI METODI GET DI PERSONAGGIO PERSONAGGIO 
    PER CONSIDERARE I MOLTIPLICATORI.
G5: MATTIA DI GIOVANNI 
G6: modifica classi state con inserimento del meccanismo di sostituzione
G7: modificato metodo CheckCritico() e tolto attributo critico alla classe MOSSA, rimozione classi effettuBuff e effettoDebuff, inserimento classi 
    EffettoModificaAttacco EffettoModificaAttSpeciale EffettoModificaDifesa EffettoModificaDifSpeciale EffettoModificaVelocità, applicazzione di abilità
    dirottata su personaggio, ultimate effetti abilità, mancano effettoComposite e gli status.
G8: completato effetti abilita e effettoComposite, fare effetto status.
G9: Fatta classe Avvelenamento,Paralisi,Sonno (non è più singleton perchè si deve tener conto dei turni di sonno che ogni personaggio passa
    ), aggiunto il metodo EffettoApplicazione. IL CAMBIAMENTO DI STRATEGIO NON è DELEGATO AL PERSONAGGIO IN SE MA AL CLIENT STESSO
    QUINDI AD ESEMPIO SARà UNA MOSSA A SETTARE LO STATUS DEL PERSONAGGIO. NON è NECESSARIA LA CLASSE NO STATUS
G10: flyweight effetto factory greedy juicy aggiungere costruttori e id alle classi effetto
G11: inserimento costruttori delle classi effetto, inserimento variabile istanza per le classi singleton, completata classw TipoFactorySingleton,
     metodo CheckEffetto() della classe mossa completato, CLASSE ABILITà AGGIUNTA DISTINZIONE TRA EFFETTI SULL AVVERSARIO E SU SE STESSI 
G12: inserimento fasi enum, classe abilità monouso e multiuso, FARE IL PATTERN STRATEGY PER TURNO
G13: inserimento iterfaccia turno creazione classi Mossa_Cambio, Cambio_Cambio, Mossa_MOssa, Mossa_Strumento, Strumento_Strumento, Cambio_strumento, spostamento metodi privati da Turno a PersongaggioAttivo
G13: implementazione pattern strategy per esecuzioneTurno con strategy complete del tipo MossaMossa, che corrispondono ad azione g1 e azione g2
testare creazione di classi tramite nome
G14: Utilizzo di Collections per lo swipe degli elementi, realizzazione chekc velocità,
G15: esecuzione MossaMossa.
G16: Negli status è stata inserita la fase di attivazione, modifica dei metodi attivaabilità in turno, aggiunto il numero massimo di attivazioni
per turno per le abilità multiuso
G17: aggiunta di bridge a personaggio attivo con attaccante e difensore, aggiungere bridge ad abilità e 
G18: rimosso numero esecuzioni massime per turno ad abilità, implementato abilità bridge, implmentata la possibilità di modificare
l implementazione del personaggio attivo, attaccanteBridge e difensoreBridge sono singleton juicy
G19:eliminato array personaggi attivi e ineriti singoli attributi perchè e una combinazione che funge solo quando attaccanto entrambi
l ordine ora si può definire direttamente controllando le velocità, la classe MossaMossa è stata aggiustata,
IL CONCETTO DI PRIORITà è SUPERFLUO E VA TOLTO IN G20  CONTINUARE Mossacambio
G20: MossaMossa fatta, MossaCambio fatta, CambioMossa fatta, CambioCambio fatta.
G21: strumento revitalizzante, rimozione status, aggiunte abilità alle mosse, si possono aggiungere ps a quelli totali non esiste piu un limite superiore, termitane classi combinazioni turno che contengono gli strumenti
G22: partita, aggiungere messaggio output a mosse effetti status, fare il main, fare i file
G23: aggiunti messaggi output a effetti abilità,status,strumenti juicy
G24: MAIN, View, CambioPerKo